let input = [
['on', -4, 48, -30, 24, -39, 15],
['on', -19, 33, -15, 29, -4, 42],
['on', -1, 49, -14, 38, -27, 20],
['on', -28, 16, -16, 36, -21, 27],
['on', -23, 27, -26, 20, -23, 22],
['on', -8, 43, -10, 43, -21, 30],
['on', -45, 4, -6, 47, -15, 33],
['on', -22, 22, -6, 45, -29, 19],
['on', -30, 18, -47, -3, -24, 22],
['on', -6, 43, -37, 8, -19, 27],
['off', 18, 28, -15, 4, 32, 49],
['on', -2, 45, -17, 35, -15, 34],
['off', -49, -33, -49, -31, -10, 5],
['on', -31, 21, -12, 34, -48, 6],
['off', -38, -27, -44, -25, -17, -4],
['on', -21, 32, -9, 45, -18, 33],
['off', -14, 3, -10, -1, -40, -29],
['on', -30, 16, -13, 34, -4, 45],
['off', 24, 34, 13, 32, -38, -25],
['on', -27, 26, -14, 38, -24, 22],
['on', 35544, 55136, 51736, 62748, -58537, -33425],
['on', 33690, 50869, -78828, -40948, -44269, -23196],
['on', 65407, 77846, -1962, 21102, 30745, 35336],
['on', 43820, 63036, 45669, 68304, -27802, -19946],
['on', -80968, -79217, -15189, 550, -20396, -2177],
['on', 22543, 55131, -50184, -36252, 46098, 64106],
['on', -12595, 7924, -24867, -13344, -96867, -68102],
['on', 9874, 31255, 65277, 89043, -936, 16277],
['on', -13411, 5153, -10968, 4147, -87107, -78849],
['on', -8897, 8799, 57380, 81655, 9642, 37776],
['on', 67474, 84855, -6483, 10922, 41290, 57415],
['on', -8012, 1755, 34193, 64326, 48900, 73023],
['on', 54961, 78882, -7659, 5406, 36768, 70357],
['on', 4538, 32860, -47844, -36498, 51393, 73621],
['on', 16397, 28684, 16381, 47358, -87090, -57131],
['on', 38468, 57198, -14413, -5639, -67748, -57437],
['on', -60663, -47089, -34032, -26482, 49838, 59849],
['on', -35900, -24050, -62434, -43634, 35478, 45195],
['on', 39580, 65361, 49921, 69519, 19635, 40186],
['on', 72891, 74867, -42056, -22591, -6916, 20783],
['on', 1951, 24816, -74448, -64168, -36633, -31963],
['on', 24833, 49754, 20298, 43211, 51546, 73514],
['on', -3167, 30380, 35722, 38122, -76109, -57000],
['on', -82903, -79067, -8395, 20541, -5265, 4392],
['on', 3218, 14953, -13800, -1624, -89481, -62873],
['on', -53283, -38277, 1641, 4903, -70901, -45748],
['on', -32141, -25640, -34847, -13896, 69407, 86876],
['on', 37990, 61788, 44601, 58722, -49195, -29888],
['on', 46963, 82000, -20841, -6866, 27132, 57574],
['on', 53439, 75061, 42180, 56045, -29192, -7810],
['on', 56225, 83464, -29936, -24016, 9181, 40276],
['on', -25381, 6615, -36495, -470, -92049, -72629],
['on', 32658, 54160, 47754, 70225, -6772, 7057],
['on', 1541, 22570, 64100, 80080, -46051, -26336],
['on', 290, 25368, -75499, -38271, -71991, -44993],
['on', -90436, -74173, -16161, 9329, -6785, 12872],
['on', -77341, -60209, 12324, 44621, -14282, 15269],
['on', 43442, 74799, 38197, 48084, 9898, 46142],
['on', -8617, -3246, -18762, 3821, -87843, -72818],
['on', 30362, 51314, -8722, 8473, 54067, 78087],
['on', -27208, -9871, 10214, 23370, 70814, 83559],
['on', -34980, -14547, -78208, -70283, -27640, -3899],
['on', -42751, -6005, 44998, 73226, 34016, 57989],
['on', -82302, -64007, 13489, 29455, -38227, -20899],
['on', -11988, 12700, -28404, -6516, -90902, -70602],
['on', 33172, 47497, -22050, 5845, 63959, 73452],
['on', 4520, 20681, 53723, 81778, 42603, 64776],
['on', 9456, 39703, 48507, 61312, -51529, -40905],
['on', -40098, -6364, 30241, 51715, -80424, -53739],
['on', 12558, 41048, -75142, -67808, -28847, -5450],
['on', -45305, -37476, 59373, 65800, 30613, 52009],
['on', -51862, -28691, -80526, -49298, 7585, 33680],
['on', 33988, 56509, -76294, -52403, -24060, 8376],
['on', 66701, 87231, -14532, 2225, -2979, 12349],
['on', 6390, 28035, 24319, 41006, 66533, 72374],
['on', -92154, -59055, 17719, 22642, 6955, 28468],
['on', 33232, 43716, -9213, 10287, -76824, -69144],
['on', -15670, 8102, 55811, 91367, -36831, -16337],
['on', -11992, -4723, 51539, 87697, 23232, 47761],
['on', -5295, 18741, -72590, -48553, -73622, -40811],
['on', 18186, 41716, 67026, 78411, -34911, -5988],
['on', -68762, -64823, -45789, -18913, 9605, 45048],
['on', -12471, -8333, -49562, -33936, -68222, -58934],
['on', -1314, 15331, -30976, -16222, 67572, 84940],
['on', -67163, -61062, -53863, -18643, -47613, -15657],
['on', 71390, 87446, -28061, -15108, -17260, 5398],
['on', 43837, 73348, 47081, 51019, -27859, -13016],
['on', 38886, 48555, 44108, 70423, 28181, 43111],
['on', -77134, -58601, -13936, 11454, 22269, 39015],
['on', 16000, 20829, -96924, -65406, -17350, 6468],
['on', -63622, -40677, 39467, 48832, 28335, 33734],
['on', -83957, -71425, 18893, 29929, -11533, -2293],
['on', -92470, -69285, 14707, 19654, 18369, 26120],
['on', 13641, 38318, -32184, -19122, -82832, -59293],
['on', 38368, 44793, 7451, 23119, -79164, -55642],
['on', -34078, -24088, 37612, 70266, -57847, -30148],
['on', 45511, 61076, 25218, 47528, 21820, 50200],
['on', -9251, 14390, -26731, 9955, -84053, -62781],
['on', 7166, 29475, 65191, 78750, -56267, -31353],
['on', -1215, 16834, -98600, -71219, -235, 21112],
['on', 66193, 69134, 28687, 42487, -17341, -7323],
['on', -32865, -5842, 14478, 43666, -87864, -55075],
['on', 40182, 48489, 57444, 85093, -21528, -5631],
['on', -37152, -5019, 30492, 43671, 56217, 78887],
['on', 46382, 55909, -67994, -58067, -16846, -3160],
['on', 32700, 56924, 22430, 44279, 41830, 63068],
['on', 26774, 34296, -80268, -60786, 13217, 29206],
['on', -5802, 1019, 34264, 65124, 50883, 74910],
['on', -42392, -13729, 13094, 41810, -79316, -51263],
['on', -16021, 473, 57439, 86998, -46753, -30286],
['on', -62595, -45603, 4608, 9583, 57915, 82579],
['on', -4473, 1973, 57840, 73813, -68167, -33772],
['on', -83547, -62073, -33126, -18871, -17468, 2918],
['on', -46545, -39844, -70331, -60310, 13062, 37682],
['on', -31519, 469, -711, 7423, -94431, -62298],
['on', 60002, 89047, -29111, -9661, 12744, 28690],
['on', -1450, 20279, -13723, 5802, -98979, -77404],
['on', -7347, 23250, -90904, -68475, -38218, -31606],
['on', -15622, -8177, 62746, 92916, -31184, 3126],
['on', -53804, -52634, 45539, 66268, -46218, -7476],
['on', -65959, -57397, 36117, 52643, 19481, 45747],
['on', 43928, 54629, 8065, 16553, -72837, -47865],
['on', -77510, -62388, -54448, -20445, -16968, 15103],
['on', 28751, 32027, -47236, -17317, 55145, 71895],
['on', -63166, -38470, -77573, -47295, -20443, 6131],
['on', 28272, 58068, 53583, 65317, 5882, 27642],
['on', -87017, -47718, -29823, -6062, 24910, 39735],
['on', 9462, 38606, 66092, 87363, 14791, 34975],
['on', 60870, 83615, 16444, 35987, -1375, 18757],
['on', -61017, -51891, 38733, 57918, -55845, -32294],
['on', 17842, 45753, 58058, 78326, 16889, 44761],
['on', 66304, 81980, -51921, -35554, -1171, 8798],
['on', -33872, -17168, 37853, 39657, 48783, 81069],
['on', 17025, 42143, -32845, -10455, 65973, 83280],
['on', 35256, 55278, -72080, -40057, 7549, 32601],
['on', 30028, 53691, -15660, 2864, 55672, 84796],
['on', -93477, -72259, 13273, 37746, -13865, -732],
['on', 8114, 19004, 61128, 80348, 40437, 54937],
['on', 35042, 46361, 23302, 44970, 57849, 81964],
['on', 15670, 27956, -50201, -32885, 43089, 78261],
['on', -22149, -4701, 70832, 92978, -18375, 8955],
['on', -11307, 5395, 64032, 80176, 16681, 41609],
['on', -43425, -28061, 67202, 74457, -36752, -9283],
['on', -47157, -23853, 22746, 46164, 59388, 69758],
['on', -66470, -41360, 24611, 42210, -58386, -38174],
['on', 24871, 39254, 52512, 83471, -2514, 17277],
['on', 9854, 12006, -42027, -22328, -78647, -71822],
['on', -63822, -45142, -74770, -40518, -12693, -1226],
['on', 7514, 29519, -70540, -40815, 50673, 66670],
['on', -86355, -64456, 1739, 18125, 21907, 45251],
['on', 23938, 36472, -35351, -19431, 56359, 87714],
['on', -61952, -33569, 51907, 81871, -38456, -18781],
['on', 54670, 64202, 19047, 45756, -35785, -24071],
['on', -62952, -32348, -23703, -756, 64776, 79497],
['on', 42131, 72686, 43348, 69631, -12082, 9850],
['on', 19070, 30412, 980, 20591, -90809, -62142],
['on', -9351, -4058, 46899, 70855, -57535, -32949],
['on', 58882, 72704, 21502, 45491, 26413, 44449],
['on', 27826, 59456, -80504, -41682, 17382, 44358],
['on', -48248, -41584, 23606, 41769, 54404, 66807],
['on', 803, 3373, -78943, -70599, 14956, 29213],
['on', -77364, -60633, -36875, -17085, -1174, 21376],
['on', -71159, -63592, -30044, -11779, -61398, -36500],
['on', -69639, -51727, -25463, -11440, 35873, 47448],
['on', -14747, 1355, -90524, -63391, -33627, -15447],
['on', -14250, 14802, -51215, -28495, 61720, 73235],
['on', -34423, -6304, -44713, -24670, 65483, 74818],
['on', 62322, 90758, 13367, 39938, 7438, 27708],
['on', 46367, 81400, 11677, 35279, -47304, -24771],
['on', 4379, 23035, 61932, 84911, -63724, -43631],
['on', -89042, -68392, -5068, 16120, -14807, 4087],
['on', 63034, 91408, -10916, 23888, 12401, 43459],
['on', -82262, -59907, 3979, 40319, -1175, 25220],
['on', 16006, 42587, -72561, -58071, -33042, -9704],
['on', 68016, 92195, 8804, 14233, -33255, -1477],
['on', -50921, -37413, 45745, 81563, 1283, 20895],
['on', 11428, 31965, 47684, 73555, 26199, 46769],
['on', -22972, 1981, 16390, 37660, 62583, 75045],
['on', 33829, 56047, 53258, 57241, -44084, -20261],
['on', -84051, -68366, 29094, 43279, -17225, 10812],
['on', 50085, 75114, 6497, 31618, -37737, -17385],
['on', 17484, 32905, -48591, -23834, -75180, -54610],
['on', 51877, 82949, -18174, -5750, -53652, -42825],
['on', 32775, 58264, -11346, 9920, 57936, 66561],
['on', -52169, -28507, -90305, -53670, -19641, 13206],
['on', -71218, -41412, -59994, -48983, 15647, 33905],
['on', 26805, 52467, 62380, 84830, -4520, 10963],
['on', -4087, 2092, 71217, 97333, 8093, 33139],
['on', -80230, -57401, -31567, 3147, 39782, 58307],
['on', -80572, -67522, 31920, 50297, -7054, 10350],
['on', -71271, -49989, -37730, -28383, 37368, 55962],
['on', -75528, -56735, 37170, 52802, -34426, -19488],
['on', 64763, 85408, -7784, 5034, -41782, -15632],
['on', -61687, -55301, 54758, 61276, -15846, 9067],
['on', 30543, 63245, -18542, -4101, -79361, -45457],
['on', -14932, 5661, 54028, 79525, -61556, -32216],
['on', 24493, 31197, -34578, 1825, 63560, 86978],
['on', -61036, -47222, 14404, 38815, 29338, 54873],
['on', -38192, -8201, -81948, -57915, -17188, 10726],
['on', 1990, 15491, 56137, 78488, -42010, -28371],
['on', 5049, 33267, -79591, -57008, -42567, -22184],
['on', 24693, 34274, 24506, 45113, -79046, -65370],
['on', 68172, 98565, -14312, 8628, -9721, 13285],
['on', -18235, 6826, -25122, 10050, 60096, 85636],
['on', 45928, 69951, -60287, -37529, -20540, 7359],
['on', -32041, -5059, 51092, 63261, -66204, -31843],
['on', 63653, 71469, -34873, -31161, 14048, 39702],
['on', 22396, 43880, -3824, 14660, -90531, -56170],
['on', -1717, 21789, 53858, 67026, -58144, -47816],
['on', -51019, -40959, -75814, -60550, 11755, 46123],
['on', -57489, -39503, -64465, -33404, -48668, -30131],
['on', 27760, 59108, 42790, 67256, 17743, 35790],
['on', -43692, -29811, -88277, -59083, 5968, 37461],
['on', -47420, -22185, -68408, -52385, 23869, 44928],
['on', 39709, 61505, -21268, 1882, -76594, -60038],
['on', 54698, 76952, -17074, 10219, 24567, 44175],
['on', -95465, -62390, -29895, -23300, -11863, 4898],
['on', 23365, 40278, 58938, 80416, -21545, 9812],
['on', 11923, 35757, -66990, -41080, -61382, -33846],
['on', 67045, 75089, -11897, 4681, -47955, -24267],
['on', -90376, -59893, 117, 26316, 28188, 35096],
['off', 24651, 28210, -24590, -10312, 66417, 75292],
['off', -43951, -18830, -69398, -52261, 28497, 50225],
['off', 42514, 62323, -60372, -24865, 37347, 49320],
['on', 49798, 77900, -72682, -49927, -10258, 958],
['off', 24604, 45145, 36058, 57891, -53557, -34761],
['on', -65518, -39972, 34159, 54763, -17646, 9176],
['off', -76836, -49612, 27033, 40308, 24773, 37790],
['off', 41029, 63639, 34627, 54572, -60195, -35060],
['off', 5440, 40626, 31825, 56887, 58565, 74579],
['on', -85410, -68908, -16763, 12913, 1884, 24605],
['on', -70712, -56718, -48053, -38417, -37942, -32604],
['off', -66574, -45489, 34467, 41894, -46802, -24009],
['off', -30928, -7167, 43518, 70824, 33329, 64950],
['off', -52088, -17091, -28441, -10616, 56304, 83190],
['off', 73277, 76646, -5922, 10725, 23075, 35243],
['off', -44861, -12403, -18397, 9805, -90975, -64778],
['on', -19159, -8086, -84649, -57626, -4777, 30377],
['on', -48235, -45399, -76542, -41786, -27853, -11708],
['off', -41696, -17405, -81352, -58226, -51727, -15321],
['on', -21612, 8433, -88881, -57104, 20197, 38496],
['off', 64866, 82781, -35287, -19222, 2225, 31593],
['off', -60086, -31957, -66807, -52584, -47785, -31167],
['on', -75232, -65410, 6879, 15928, 25821, 33108],
['on', 49721, 74332, -32211, -5492, 37490, 67240],
['on', -69008, -59258, -67365, -39177, 2702, 22494],
['on', 40598, 77320, -44858, -24495, -39106, -18658],
['on', -66046, -43012, 9311, 31541, 51758, 55618],
['on', -74902, -54476, 9991, 38601, -18468, -2400],
['off', 934, 27205, -52862, -47494, -78005, -46221],
['off', 36318, 42994, 63750, 79912, -11834, 6870],
['off', -9448, 6260, 69407, 96104, 3742, 26473],
['on', 34180, 59194, 56640, 70053, -6782, 2219],
['off', -71868, -58289, -50419, -43052, -16738, 3185],
['off', -55443, -21609, -43083, -21999, -75650, -51578],
['off', -3124, 2680, 26555, 50324, -84693, -65786],
['off', 65726, 80418, -21970, -4777, 28280, 55831],
['off', -12755, 2382, 21228, 27803, -80546, -62078],
['on', -70824, -46210, -46992, -35115, -6484, 18899],
['off', 19667, 33161, 59955, 85149, 19245, 33893],
['off', 5654, 11498, 56328, 89517, -51989, -33158],
['on', -20574, -5577, 39609, 41373, 66022, 82822],
['on', -16635, -2094, 61755, 97252, -10151, 3379],
['off', -61710, -29756, -53529, -20524, 50061, 67887],
['off', 12337, 45140, 60042, 89297, 9701, 36968],
['off', -42381, -17258, -40434, -12651, -79807, -52351],
['off', -57645, -52169, -20403, 4163, -62673, -54906],
['on', 26686, 40465, 7785, 22540, 72481, 83980],
['on', -23030, -18498, -31032, -9833, 61054, 83029],
['on', -10867, 9838, 45397, 66784, -51464, -39505],
['off', 56847, 77259, -17184, 2949, -55341, -38773],
['on', 15524, 40419, -42588, -27508, 61847, 79655],
['on', -91271, -71952, 15556, 34300, 14005, 28676],
['on', 65780, 81595, -29919, -17998, 28053, 44908],
['on', 31479, 58997, 55159, 82009, -20523, 11865],
['on', 2149, 19762, -86184, -56666, 18206, 36344],
['off', 27069, 56637, -73675, -53032, -13508, 15432],
['on', 67416, 85446, 2917, 28648, 5402, 35606],
['on', -44500, -23236, -91223, -65053, -3525, 14263],
['on', -75739, -51755, 49292, 67356, -23308, 10605],
['on', -34841, -9806, -19491, -1709, 64409, 96498],
['on', 9551, 24535, 65245, 79434, -24616, -12986],
['on', -83205, -55438, -39820, -19718, 22074, 38142],
['off', -71953, -53073, -44959, -30448, 34060, 50956],
['off', -48764, -35469, -61736, -43279, 41195, 52261],
['on', 15917, 37063, -75662, -56956, 18898, 36595],
['on', 37396, 54561, -29290, -16200, 64044, 76199],
['off', -14179, 10592, -80049, -51222, 38386, 68137],
['on', -29902, -21453, -94461, -71699, -6448, 6244],
['off', 66863, 74181, 9066, 35219, -28995, -8750],
['on', 7191, 37647, -74506, -52303, 45114, 65447],
['off', 53433, 79524, 21402, 48649, 5035, 16962],
['off', 54924, 71855, 28434, 48319, -27603, -14643],
['off', 44568, 73341, 41377, 69060, 2132, 18323],
['off', 32192, 46654, -86893, -59876, 21008, 38923],
['off', -26751, -3856, 21442, 39353, -84098, -58106],
['off', 63303, 65533, 42998, 54340, 3302, 15908],
['on', 4235, 13687, -50180, -34351, -76521, -58485],
['on', -33290, -9251, 40469, 57296, -66106, -48947],
['off', -81172, -62578, 6482, 36668, -45865, -22894],
['off', -81904, -65892, -11941, 4053, -42478, -22147],
['off', 35829, 70381, 41448, 69602, 18749, 38582],
['on', -10433, -2099, -82602, -51316, 36823, 64092],
['on', 38080, 53913, 36937, 47688, 39322, 71479],
['on', -21560, -4521, 66563, 85082, 20252, 45582],
['off', -85857, -68417, -41847, -28573, -7729, 2847],
['on', -68327, -31793, -21900, -289, 56789, 69398],
['on', -67562, -42688, 16743, 32262, 22000, 44570],
['off', 48052, 67704, -23423, 4103, 44261, 78217],
['on', -22576, -194, 61895, 82600, -40620, -5831],
['on', -16931, 7379, -15102, 1748, -87988, -74150],
['on', -26047, 12491, 55107, 74563, 21205, 33348],
['off', -25435, -946, -82352, -52608, 33364, 53843],
['off', -5833, 18798, 39831, 56611, -72213, -47388],
['off', -5822, 14115, -98135, -64976, -20248, 9788],
['on', -15154, 670, -75227, -54455, 33215, 60140],
['off', 18909, 48180, 62835, 69076, 27175, 44519],
['off', -58838, -51811, -8942, 14922, -72422, -48233],
['on', 47362, 82935, -58723, -33218, -14356, 7150],
['on', -64609, -42063, -58790, -35608, -50387, -39455],
['on', 9832, 20482, 40076, 58832, 41495, 59344],
['on', -29810, -7444, -73368, -47276, -64805, -37263],
['on', -66021, -35774, 44614, 81545, -2880, 20810],
['on', 30417, 44347, 64937, 66634, 27916, 47000],
['on', 14925, 33804, -59990, -48743, -55335, -46081],
['off', -45330, -16788, -2912, 25446, -78240, -63474],
['off', -75837, -58168, -7970, 3635, 30476, 60250],
['off', -12011, 13258, -89694, -69437, 23137, 41026],
['on', 58141, 91626, -3240, 13201, 23976, 30297],
['off', -69440, -42294, -3341, 11023, -75797, -55367],
['off', 28775, 48112, 49087, 66505, -47634, -19480],
['off', 17405, 40878, -78515, -63319, 20589, 35237],
['on', 46505, 79525, 46254, 52587, -16956, -979],
['off', 14778, 49904, 51599, 61793, -68550, -48309],
['off', -17127, -2237, -80624, -47506, -43373, -23646],
['on', 42852, 55498, 60931, 70121, -913, 10924],
['on', 53866, 67942, 10584, 28056, 44574, 51590],
['on', 52164, 61481, 25073, 45284, 20579, 54644],
['off', -38817, -3710, 49963, 73191, 35577, 68161],
['off', 74571, 87380, -26549, -8365, -41849, -15478],
['on', -11635, -3471, -2190, 2324, -84076, -75086],
['on', -87133, -75239, -9635, 11698, -1887, 26028],
['off', -65700, -58148, -27843, -17147, 46837, 51188],
['on', -8973, 19499, -57314, -31198, -82041, -63223],
['on', -8234, 7290, 72201, 85190, -41415, -12525],
['off', -69515, -63879, -11878, 12202, -61049, -31131],
['on', -593, 25155, 71211, 88034, -13360, 13827],
['off', -41118, -22761, -51023, -43558, 42131, 56647],
['on', 45695, 64697, -70454, -47486, 4653, 27783],
['off', -69391, -49194, -6224, 21792, -56102, -46702],
['on', 12567, 16989, 63359, 83739, -7433, 18488],
['on', -47607, -28894, -76890, -58285, 16882, 41914],
['on', -30015, 4988, 14737, 22104, 62453, 85467],
['on', -54404, -44808, -50918, -32444, -49452, -43588],
['off', 12954, 44089, -28041, -5913, 67605, 87219],
['on', -82272, -53812, 25783, 42439, -42516, -12409],
['off', -94480, -60573, -25004, -2471, -2718, 11057],
['off', 51649, 65225, -14724, 6310, 38450, 66205],
['off', 69856, 80286, 21304, 46173, -11935, 15518],
['on', -77660, -69829, -25072, -3423, 25500, 50923],
['off', 37047, 59725, 51835, 79489, 272, 35097],
['on', -67713, -31489, 35835, 38541, -57246, -47586],
['on', -18556, -7707, -17678, -8114, -87728, -59085],
['off', -78610, -61520, 11250, 38454, -8429, 3203],
['off', -44797, -21166, -14536, 9531, 59712, 82290],
['off', 45719, 59834, -18760, -4920, -52363, -46018],
['off', -35717, -12687, -83577, -62558, -8962, 21313],
['on', 44536, 59941, 29580, 64623, -24759, -4916],
['off', -18864, -3108, 48226, 78222, 42732, 67354],
['on', 12357, 39639, -44392, -26900, -82899, -54317],
['off', -58310, -24651, 15307, 42877, -77149, -40022],
['on', -43945, -20285, 70712, 82950, -4121, 3442],
['off', 7101, 22967, 64872, 83707, -25824, -9526],
['on', -62076, -43190, -21347, -3360, -63874, -36231],
['off', 6340, 27337, -73151, -47585, 46269, 52581],
['off', 47397, 57486, -63732, -40590, 44295, 49537],
['off', -78613, -57237, -56534, -32459, -35285, -13648],
['off', -31072, -7685, -38542, -7098, 57760, 83347],
['on', -63099, -35927, -77355, -53793, 29264, 33129],
['on', -3649, 25126, 4399, 19136, -90001, -77851],
['off', 8510, 11246, 57072, 89213, 11594, 31605],
['off', -16380, 3546, 28043, 58308, 62410, 70708],
['off', -73518, -51371, 8803, 36830, 27148, 50003],
['off', -76901, -55804, -20544, -14756, -34886, -16018],
['on', 42245, 58590, -60103, -37286, -38862, -20729],
['off', 2872, 20494, 76096, 89070, -30072, -13378],
['off', 62225, 70240, 18398, 51759, -26426, -10316],
['on', -8268, 25701, -44287, -22096, -73605, -62816],
['on', 12693, 28817, -90968, -58755, -38493, -10212],
['on', -72781, -51700, -59730, -40159, -22471, -10811],
['off', -86186, -61431, -40796, -16811, -20606, 1945],
['on', 19756, 40482, 41370, 75797, 22120, 46137],
['on', -38689, -13316, -24252, -16211, 66862, 80344],
['on', 25358, 46927, -81264, -64854, 29512, 35413],
['on', -16755, 18260, -75084, -53865, 48791, 62218],
['on', 37799, 45278, 38376, 53913, 31553, 51525],
['on', -78288, -65705, -20882, 5515, -56620, -32490],
['off', -14779, -3865, -35491, -12433, 60969, 77610],
['on', 1041, 7426, -75565, -54588, 36056, 52921],
['on', -41864, -34775, 22219, 51820, 40842, 71780],
['off', -23755, 2275, 51063, 64402, -67945, -44438],
['on', -93770, -74301, -30533, 2469, -4612, 7196],
['on', -59566, -38442, -68259, -32849, 36360, 51994],
['on', 43187, 57027, -18906, -8453, -77163, -57489],
['on', -29794, -6913, 28460, 55404, -79855, -58015],
['off', -57236, -52204, -21814, -7565, 38317, 74160],
['off', 56146, 75194, -39180, -18839, -56810, -31930],
['on', -66300, -58204, -19301, -4228, -61589, -39254],
['off', -73278, -68405, 22614, 43899, -16199, -10518],
['on', 57074, 79996, -6578, 17919, 33160, 54010],
['off', -40719, -2100, 65789, 80371, 34406, 44030],
['on', -44080, -27053, 2572, 27247, 51202, 87551],
['on', -25151, -7880, -60771, -53496, -55535, -47740],
['off', -14214, 11970, -4404, 16997, -90900, -64733],
['off', 16310, 46047, 55884, 79489, -14464, 20211],
['on', 51594, 75047, 26992, 37723, -11584, -911],
['on', -45309, -20784, 44096, 70601, -52394, -33571],
['off', 16870, 35569, 13219, 31860, 69493, 87370],
['on', -22983, -16966, 59778, 70013, 26803, 46876],
['on', 33076, 50573, -80935, -61509, -30866, -2196],
];

function overlap1d(box1min, box1max, box2min, box2max) {
    return box1max >= box2min && box2max >= box1min;
}

function overlap3d(coords1, coords2) {
    return overlap1d(coords1[1], coords1[2], coords2[1], coords2[2])
        && overlap1d(coords1[3], coords1[4], coords2[3], coords2[4])
        && overlap1d(coords1[5], coords1[6], coords2[5], coords2[6]);
}

function checkRegions(regions) {
    for (let [state, x1, x2, y1, y2, z1, z2] of regions) {
        if (x2 < x1 || y2 < y1 || z2 < z1) {
            throw new Error(`invalid region ${x1} ${x2} ${y1} ${y2} ${z1} ${z2}`);
        }
    }
}

function solve(part) {
    // non-overlapping regions
    let regions = [
        [0, -100000, 100000, -100000, 100000, -100000, 100000],
    ];
    let scount = 0;
    for (let inputrow of input) {
        let [state, x1, x2, y1, y2, z1, z2] = inputrow;

        if (part == 1) {
            if (x1 < -50) {
                x1 = -50;
            }
            if (y1 < -50) {
                y1 = -50;
            }
            if (z1 < -50) {
                z1 = -50;
            }
            if (x2 > 50) x2 = 50;
            if (y2 > 50) y2 = 50;
            if (z2 > 50) z2 = 50;
            if (x1 > x2 || y1 > y2 || z1 > z2) continue;
        }

        let newRegions = [];
        for (let region of regions) {
            if (!overlap3d(region, inputrow)) {
                newRegions.push(region);
                continue;
            }
            if (region[1] < x1) {
                newRegions.push([region[0], region[1], x1 - 1, region[3], region[4], region[5], region[6]]);
                region[1] = x1;
            }
            if (region[2] > x2) {
                newRegions.push([region[0], x2 + 1, region[2], region[3], region[4], region[5], region[6]]);
                region[2] = x2;
            }
            if (region[3] < y1) {
                newRegions.push([region[0], region[1], region[2], region[3], y1 - 1, region[5], region[6]]);
                region[3] = y1;
            }
            if (region[4] > y2) {
                newRegions.push([region[0], region[1], region[2], y2 + 1, region[4], region[5], region[6]]);
                region[4] = y2;
            }
            if (region[5] < z1) {
                newRegions.push([region[0], region[1], region[2], region[3], region[4], region[5], z1 - 1]);
                region[5] = z1;
            }
            if (region[6] > z2) {
                newRegions.push([region[0], region[1], region[2], region[3], region[4], z2 + 1, region[6]]);
                region[6] = z2;
            }
            region[0] = state == 'on' ? 1 : 0;
            newRegions.push(region);
        }
        regions = newRegions;
        checkRegions(regions);
        ++scount;
    }

    let res = 0;
    for (let [state, x1, x2, y1, y2, z1, z2] of regions) {
        if (state == 1) {
            res += (x2 - x1 + 1) * (y2 - y1 + 1) * (z2 - z1 + 1);
        }
    }
    console.log(res);
}

solve(1);
solve(2);
