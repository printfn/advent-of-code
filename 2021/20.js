function mk2d(a, b) {
    let arr = [];
    for (let i = 0; i < a; ++i) {
        let row = [];
        for (let j = 0; j < b; ++j) {
            row.push(0);
        }
        arr.push(row);
    }
    return arr;
}

function asserteq(a, b) {
    if (a != b) {
        throw new Error(`assertion failed, '${a}' != '${b}'`);
    }
}

function draw2d(img) {
    for (let i = 0; i < img.length; ++i) {
        let row = '';
        for (let j = 0; j < img[i].length; ++j) {
            row += img[i][j];
        }
        console.log(row);
    }
}

let algo

let input = [
'.#...##.#...#.##.#.....#..###...#.##.##...##.##.##.###...##.#.#...#..##..###.....#..##...#....#.####'.split(''),
'##.#####..#.#...##.#..##..#.#.######...#.##.#...#...##.#...#.#.#......#.#####.....#.######.....#...#'.split(''),
'....#..###..#.###.####....##.#...#...##.###.###...#...####.#.......#########.####.#.#..###.##..###..'.split(''),
'.#..#.##.###...#.##...#.....#.#.#...##....##.......####...#...####.####.#...#..#..##..###.#..#.#....'.split(''),
'..#.###..##.......#.##...##..#...####.####.##..#####.#..#.####..#....#..##..##....##.##...#.......#.'.split(''),
'#.#.#..#.####..###..#..#..##.#...#.#..###.##..#.##.###.##..#.......##.###.#..###.####..#####.....#..'.split(''),
'#.#...#..#.##..#.###...###.#....#...#..###.#.#..####.#..#.#.#.#..###.####.......#.#..#.####...###..#'.split(''),
'###.#.##.#..#.##.#.#....###...##..#.##.#.##..####...##.#.#....###.#.###.##.#.#####..#....#......##..'.split(''),
'.#.#..##.#.###..#..#.####.######.########....##.#.#.###.#..#...#.##.##..#.#.##.####.####.#.###...##.'.split(''),
'.#..#...#####..##..##..#.#.##.#######...####...#..#.###..#.#####..#..#...#..###...#.##....#.###..#..'.split(''),
'##...####.....###.#....##..#...#...##..#.#..##.####..#.##.#..##.##.#...##.##..##.##.#.##.##.####.#.#'.split(''),
'#...#.#.#..#......#.#.##.#.##.#......#.....#####..#.###.##.##.###..#.#.###..#####...#.#....###.#.#..'.split(''),
'..##.##.#.#.#..#######.##..#...##.....#..#.##.#...#..#.....#.#.##..##.#..#.##.#..#.#..##.#.##.######'.split(''),
'#..##...##...###.###..##.#.....#..#.#.#.###..#......#...##.#...####.##..#...##..#...####.##....##.#.'.split(''),
'##.#.###.###.#.#.....#.#.##..###.#####.#.#####.###.##.##.##.##.....#...####.....#.#....#.###.#.#...#'.split(''),
'.#.#..#.###.##.###.#......#..#..##.##..#.#..#......#.##.#..#......##.##.##...#.##.....#...#.##..#..#'.split(''),
'###....####.###.#.#.#...#.###.#####.##.###.#...#.#.#..#.##..#..##.....####.#.##..##..#.###..###..#..'.split(''),
'##.##..####...#......#..##..#..#.#.......###..####..#...##..####..#####....##.#..#..###...#####.....'.split(''),
'####..##.#...#.####..#####..#..#..###.#.##.#.###..###.#....#..#.#.#.#..##.#...#..#.####....#......#.'.split(''),
'#.####.##.##.####.#..#..#...##.##.##....#########....#.#.###.#.#.#.......#..#####.##...#..#....#.#.#'.split(''),
'..##.###..####.#.###.#.#...##..#.###..####.##..#.......##.##..#..#####.########..####.#..###.#..####'.split(''),
'#..##...###....##.#...#.#..###....##..####..#...##.####.###..##......####..#..#...#..#....#.##.#.#.#'.split(''),
'#.##..#......##....##.#.#..##..#.#...#.##..#.#.#.#####.#.##...###.#.#.####..###.###.#.....#....#..##'.split(''),
'.####...#...####...##..###...##..####.####...#.#.#.....#####.##..#.#..#..#..#.....#.#..##......#.#.#'.split(''),
'.....#....#..#.#.####.#.#..#..#.##...#....#####.###.###.####.##..####.#..#####..#...###.#..#.#.###.#'.split(''),
'#.###..#....####.##..#.....#...#.#.##.###..#.....#..#.#.#####.##.####.#.###..###.....#.##.##.#.##..#'.split(''),
'..##..#..#####..#...#.#.#..###...#.#.####.###....#.##.#...#.##.##...##.#.####...#..###.#..#.#.##..#.'.split(''),
'.#.##...###...####.#..##.#.#####.#....#..#..#.##..###..#.#..##.#..#...####.#.####.#..##..#.#####...#'.split(''),
'#.####...##...#.##.####.###..#...####.###...#..#.#..#.####.##...#.#....#.#..#.#.###.#.###.###.###...'.split(''),
'.#.#.....#....###.#..#.#.##.##....#.#..##....###..###...######.##..###..#####...#..##..###.#.#.###.#'.split(''),
'#..#.#.#...##..##.#....#.##.##..##.###.###..###.....#...##..#..#######..##.#.##.##..#.#.#.#.#.#.####'.split(''),
'.#.#.....#...#...#.####.....##...#.##..###.####.#.#..####.#####...#..#.....##..#..##...##..#########'.split(''),
'..##.#.....#.#.###.#.#..##..#.#.#..#..###.#.#..####..##.####..#...##.#.#.###..##...#..##.##...#..#.#'.split(''),
'.######.####...#.#..#.#.###.##...#.##.#.##.#..##....#..#.#..#.#.##...#.#....##..##...#.#.##.#.#.#.#.'.split(''),
'..##...###.#.#.#......#.#.###.##...#.###.#.##.#....####.###..#.##...#..#..###.#.####..#....####.##.#'.split(''),
'##.#.###.#.##......##.####.#..###...#..#..#.#..##.#.#..#.###..#..##..#.#...##..##.##.###.##.....####'.split(''),
'#...#..#.######.#.#...#.##.##....###.##..#..###..##.###.....##.#########..##..#....#...#.##.#....##.'.split(''),
'#.######.#.##.###...##..##...#..##...####.#.#.....##.#.##.####..###.##..##.#.####...###.#.#.####.#.#'.split(''),
'#####..####....#.##..##...#..#...#####...#.#..#...#.#####.#.....####..#..####.######.##.#....###.#.#'.split(''),
'##.#.#..####.#.......#...##..#.#..#..#..##..####.####...#......#.#....###.#.#.....##..#.#.#..#...#.#'.split(''),
'......###....#.......#.#.#...##...###.#...##..##..#..##...#.#.##.##.###...##....#####...#####.#..##.'.split(''),
'.##..##.##..#.##....#..#.###..#.###..#.#.##..###....##.###..#.#.##.#...#.##.#.#.###...#.#...#...#..#'.split(''),
'..#.....#.#.#...###.#.##.....###...##.####...##.#.#.#..##.#..#....#.##.##.##..#.#.##..###.#..#####..'.split(''),
'#...#..#.......##..###.#...##..####.###.....###..####.....#..#.####...#..#.#......##..##.##..##.#..#'.split(''),
'.#..#...#########.....###...##..##..##.##.###......##.####.####.....#..##.#.###.##...#.#....#.######'.split(''),
'#..#..#....###.##.#...##.#..#...#.##...#.###...#..#####.#.##.#....####..###.#.#.#...##..##.....#..#.'.split(''),
'####.#..#.........######..#...#.##.###.###....#...#.#.#.##..#.####....#####.......##....#..#....####'.split(''),
'#....##.#.###.#....####.##...#####......#...#..#.#..####.##..###########..##.##....#...#..####..##..'.split(''),
'#.#..#.#..#.####......##..#.#.#.#......#.##.####.#..###.###..#.#...##.#.#..#.#.##..#....###.#.###.##'.split(''),
'..#..##...#####.##.###########..###.##.##...#.........###..#.##.#.###....#..####..###.#....#...#####'.split(''),
'...#....#.....###.....##.#.###..#..#####..#.....###.....#..##..#...#.##.###....#.#####.....#.###.###'.split(''),
'##.##..#.#.....##.#..#####.####...#.#.#....####.#.###.###.##......#.##...#...#...#.#.#.####..#.####.'.split(''),
'##..#...###.#.#..##..###.#.#...##.#.#.....#.#.####.##.##.#..##....#.##.#####.#...#.#.##....###.#.#.#'.split(''),
'###.....#.#..#####.#..###...####....#.#..#..#.##.#.#...##..#.#.#..###....#.#.....##.#.#.######.##.##'.split(''),
'#####..#..#.#.##..#..##.##..##.####.#.....#....#########.#######.##.###.#..#.#....#....#.##.######.#'.split(''),
'#......####.#...##.#...###..##.######..##..#...####....#...###.##..#.###..##########..#.##.##.#.#..#'.split(''),
'####...##..#..#.....#..#...##..##.####........#..##...#..#...#####.#.#.......####..##.##.###.##.#.##'.split(''),
'.##..##......##.##....##..#..#.#.#.....#####.#...####..######...##.##..#.#..#.##.#.##.##.#####.##...'.split(''),
'..#..#####....####.##.###..#...#..##.####.##.###...##.....#.####...#.#..##.#..##.###.##....#.#.#..#.'.split(''),
'#.#.#.#.#..#...#.####...##.#..#..###.####..#..##..#.......#..#.##.#...####.####..#.##..##..#.###.###'.split(''),
'..#...#...####...#..###.###.....#....#.#.##.####..#....###...###..#.......###....#.#.#.#...#..###.#.'.split(''),
'.###...#############.#####.##...#.#.#.#.#..##.....####.###.#...#.####..#....#...#.#...###.#.#.##.#..'.split(''),
'..#.#....#..#....#####.####..##..#..#.#..####.###..#.#.##.########....#.#....#########....#.#.##.#..'.split(''),
'.#...#.###.#.#.#####.###.##.#####...##.....##...####.##.#####....###...#.#.#.#####.###.###.###...#..'.split(''),
'#.#####...#.##.#.##...#....###.#..####.##..#..#..###.#.###..#.#.....#..#.#.#.####.#.......#.###....#'.split(''),
'.######.#.##....###.###.####...#...#######..#.#.#...###...#........#.###.#####..##..###.####...#.###'.split(''),
'#...##..##...###.#.#.##.##.#....#....#.#.##..###..##.#.#..#..#...#...######.#..###..#.#..#.#..#....#'.split(''),
'...####..##.#..###.##.#.#.##.#....#.....#...#####....#..###....#.#.#....##.########..##..##.#.##.#.#'.split(''),
'.####.######..####.###...#####.##.####..#..##..##.#.#.#.#.#.###...##......#..#####.#..##.#.####....#'.split(''),
'##.#.#.##....#..#.##.#...######.###..#####.....#..#.#..#.#..#..##.#.#.#.##.#..#..##.##.#......#####.'.split(''),
'.###......##.#..##.#.....#..##..##....#....########.#.##.####..##..#########...##..#.#..#.##....#.##'.split(''),
'.###.#.####.#########....#....#.###...###..#########..#..########.#..###.###.#..#..#.##.#....#..#.##'.split(''),
'..#..######...##...#.#...#..#...#.....##...#.#.#...##..#.##.##.#.##..#.......##.....##.#......#.###.'.split(''),
'.#..####...#.##.#.....###..##.#.##.....#.#.###..#...#.#...###.#...##.##....#.###.#.####.#..#.....#.#'.split(''),
'##.#..#.##.#.#.###......##...#.##.#.#.#.#...####..##....#.##.....###..#.###.#...###.##.#.....#..#.#.'.split(''),
'###.##...###.###.###.....#####.#####.#.#..#..##...##..#.#....##..#.#.####.#.#.###.#..##.#.###..##..#'.split(''),
'.##.#.####..#......#.#..###..######.#######.###..#####.##.#....##.###.##.##.##.#.####.#..##..#.###.#'.split(''),
'.#..#.....###.###.#.##..#.#.#.##....##...#..#..#.##...###.#.###..###.####.#..#..#########..##..##.#.'.split(''),
'....#...###.#.#....##..#..###..#.#.####.###.######..#.##.#...#..#.##...#...##.###..............##.##'.split(''),
'.##..####..##....#.###......#.##.#.####..#....#..###..#.###..####..##.#.#.....###.#..#.#..#.#.....##'.split(''),
'###.####....##..##.#..#######.#...#..#.##..#########.......#..#####..##.##..#..#..#..#..##...#..#.##'.split(''),
'##.##.#..#.##..#..###.#..#.####..#.#.#....#.#..####.#...#..####.#####....###.##....#..##..#..#.###..'.split(''),
'.....#.#..###..##....###.......#.######....##.#..##....#..###...#..##.##.#.....#..###...##......###.'.split(''),
'..#.#...#.....#...#....##.#.##.#.#.#.###.#..#....###.....#.#......#....##..##.##.####.##.#####.#...#'.split(''),
'..##..#.#..###..#..##..##...#..##..#...###..##.#...#..#...##.###.##.##.#.##...#.##......###.#...##..'.split(''),
'.####..###.#..#.###...#.##........#.##.#..#.#..###.##..##.#....#.#.#..##...#..#.####....#.....##...#'.split(''),
'#.......###....##..##.#.#..#.#..##.##...#.#.#.#.#.#..###.#...#..###.########....#.#######..#.##..###'.split(''),
'#..#.####..#.##.#...####....##.######.####...####..#.####...........#.##..###..#....#.##..#.#...###.'.split(''),
'..####....#.#.##.#.###...##..#.###..#......####.#.##.##.#..#.#..###.##...#..#.##.###..###.###.###..#'.split(''),
'..#....#.###..#.#...#.####.########.####..#.#.#....#.#.##.##...####.#.##..##.#.#.##.##.#..#..#..##.#'.split(''),
'.##.#...###.###..#..###.#..####.#...#.#..##.##.###...#.###.#..##.#.##......#..##..##.#.#.#.#.##.###.'.split(''),
'#######.##.#####.#..#....##..#.###..#..##.######.....##.#....###..###.#.#...##.####.#.#....#..#..###'.split(''),
'.##.###.####...##.#......#..#..#####...###.###..##..####.#....#...#..###..######..##.##.####....##..'.split(''),
'.#.....#...##...##.#.######..####.....#.#.#####....#..##....#..#...###.#.##.#.#......#.######.#.#...'.split(''),
'#####.#....#..#.#.##...##..#.#...#.#.#.##.##.#.#####.#..#.#...######.........###....#.##.###.#.#.#.#'.split(''),
'....#...##.#.###..#######.##..####.###....#.####...####.#..####.#.####...#.#....#.##...#.##.##..##..'.split(''),
'#..#.#####.#####..###.#.....#.#.#.##......#.#..###......#...#.####.#..##.#.###...#.#.......###.####.'.split(''),
'##..###...#..........#..#.###.##.##..##.#...##..#.#...##.#..#.##...##..####.######.#..#.####.#.#####'.split(''),
'..######..#...##.#.#....#.##.#.#.#.#..#..###..###..##..##..#.....#.#.###.##.#.#.#.###..##....#..####'.split(''),
'#.#.####.#.....##..#..#.#.#.##..#.#.#######.#....###.##...##.##.#.#..##..#......######.#....#....#..'.split(''),
];

// algo
// input = [
// '#..#.'.split(''),
// '#....'.split(''),
// '##..#'.split(''),
// '..#..'.split(''),
// '..###'.split(''),
// ];

asserteq(algo.length, 512);
asserteq(input.length, input[0].length);

function get(img, i, j, outside) {
    if (i >= img.length || j >= img.length || i < 0 || j < 0) {
        return outside;
    }
    return img[i][j];
}

function process(image, outside) {
    let EDGE = 1;

    let res = mk2d(image.length + EDGE * 2, image.length + EDGE * 2);
    for (let i = 0; i < res.length; ++i) {
        for (let j = 0; j < res.length; ++j) {
            let binary = '';

            binary += get(image, -EDGE+i-1, -EDGE+j-1, outside);
            binary += get(image, -EDGE+i-1, -EDGE+j, outside);
            binary += get(image, -EDGE+i-1, -EDGE+j+1, outside);
            binary += get(image, -EDGE+i,   -EDGE+j-1, outside);
            binary += get(image, -EDGE+i,   -EDGE+j, outside);
            binary += get(image, -EDGE+i,   -EDGE+j+1, outside);
            binary += get(image, -EDGE+i+1, -EDGE+j-1, outside);
            binary += get(image, -EDGE+i+1, -EDGE+j, outside);
            binary += get(image, -EDGE+i+1, -EDGE+j+1, outside);

            binary = binary.replaceAll('.', '0');
            binary = binary.replaceAll('#', '1');
            let num = parseInt(binary, 2);
            res[i][j] = algo[num];
        }
    }
    return res;
}

function count(img) {
    let res = 0;
    for (let i = 0; i < img.length; ++i) {
        for (let j = 0; j < img.length; ++j) {
            if (img[i][j] == '#') ++res;
        }
    }
    return res;
}

let a = process(input, '.');
let b = process(a, '#');
console.log(count(b));

let temp = input;
for (let i = 0; i < 50; ++i) {
    temp = process(temp, i % 2 == 0 ? '.' : '#');
}
console.log(count(temp));
